---
- hosts: spark-test
  remote_user: root
  vars:
    # required extra vars:

    ansible_sudo_pass: 123456

    db_name: spark
    task_name: spark-rl-test
    apt_requirements:
      # - libcurl4
    deploy_home: "/home/wk/sd_spark/{{db_name}}/{{task_name}}"

    local_db_src: ../others/spark.tar.gz
    db_src: "{{deploy_home}}/../spark.tar.tgz"
    db_server: "{{deploy_home}}/spark"
    db_port: 8099
    local_result_dir: "../results/{{task_name}}"
    
    local_sp_config_env: ../others/spark-env.sh
    sp_config_env: "{{db_server}}/conf/spark-env.sh"
    
    local_slaves: ../others/slaves
    new_slaves: "{{db_server}}/conf/slaves"



  pre_tasks: # set up a clean env
#    - name: check requirements
#      apt:
#        name: "{{apt_requirements}}"
#      become: yes
    - name: create folders
      with_items:
        - "{{deploy_home}}"
      file:
        path: "{{item}}"
        state: directory
        recurse: yes
    - name: copy archive
      copy:
        src: "{{local_db_src}}"
        dest: "{{db_src}}"
    - name: unarchive
      unarchive:
        src: "{{db_src}}"
        dest: "{{deploy_home}}"
        remote_src: yes
#    - name: kill running (if any) instance
#      shell: "kill -9 $(lsof -t -i:{{db_port}}) || true" # kill by port
    
  tasks:
    # this task will happen in tester.yml
#    - name: copy spark-env_sh
#      template:
#        src: "{{local_sp_config_env}}"
#        dest: "{{sp_config_env}}"


    - name: copy slaves
      template:
        src: "{{local_slaves}}"
        dest: "{{new_slaves}}"





